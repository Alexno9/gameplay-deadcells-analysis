# -*- coding: utf-8 -*-
"""explorandoDeadCells.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ct47cV2MJqsYoOVE5EuoUAm7YPU9zCeb
"""

import streamlit as st
import pandas as pd
import numpy as np

# Download do primeiro csv (trilha)
trilhaURL = "https://raw.githubusercontent.com/Alexno9/dados-analise/master/trilha-dead-cells.csv"

# Download do segundo csv (time series)
temporalURL = "https://raw.githubusercontent.com/Alexno9/dados-analise/master/timeseries-dead-Cells.csv"

df_geral = pd.read_csv(trilhaURL, sep=",", header="infer")
df_temporal = pd.read_csv(temporalURL, sep=",", header="infer")

st.title("Análise Simples: Armas utilizadas e Série Temporal de uma Corrida")

if st.checkbox('Show Gear Data'):
    st.subheader('Dados Brutos de Equipamento')
    st.write(df_geral)

if st.checkbox('Show Time Data'):
    st.subheader('Dados temporais Brutos')
    st.write(df_temporal)

# Filtra somente quando ouve vitória ou derrota sobre o gigante
filtro_giant = st.slider("beatGiant?", 0, 1, 1)
dfBar = df_geral[df_geral["beatGiant?"] == filtro_giant]

# Monta 4 tipos de dataframe com o agrupamento dos equipamentos mais utilizados
df01 = dfBar["gear01"].value_counts()
df02 = dfBar["gear02"].value_counts()
df03 = dfBar["gear03"].value_counts()
df04 = dfBar["gear04"].value_counts()

# Apresenta os equipamentos em gráficos de barra
st.subheader(f'Equipamento 1 utilizando quando resultado da luta contra o Giant foi = {filtro_giant}')
st.bar_chart(df01)

st.subheader(f'Equipamento 2 utilizando quando resultado da luta contra o Giant foi = {filtro_giant}')
st.bar_chart(df02)

st.subheader(f'Equipamento 3 utilizando quando resultado da luta contra o Giant foi = {filtro_giant}')
st.bar_chart(df03)

st.subheader(f'Equipamento 4 utilizando quando resultado da luta contra o Giant foi = {filtro_giant}')
st.bar_chart(df04)

st.subheader('Série temporal dos Status')

chartData = df_temporal[['time', 'brutality', 'tactical', 'survivor']]
st.line_chart(chartData)